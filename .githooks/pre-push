#!/bin/sh

# An example hook script to verify what is about to be pushed.  Called by "git
# push" after it has checked the remote status, but before anything has been
# pushed.  If this script exits with a non-zero status nothing will be pushed.
#
# This hook is called with the following parameters:
#
# $1 -- Name of the remote to which the push is being done
# $2 -- URL to which the push is being done
#
# If pushing without using a named remote those arguments will be equal.
#
# Information about the commits which are being pushed is supplied as lines to
# the standard input in the form:
#
#   <local ref> <local oid> <remote ref> <remote oid>
#
# This sample shows how to prevent push of commits where the log message starts
# with "WIP" (work in progress).

remote="$1"
url="$2"

zero=$(git hash-object --stdin </dev/null | tr '[0-9a-f]' '0')

while read local_ref local_oid remote_ref remote_oid
do
	if test "$local_oid" = "$zero"
	then
		# Handle delete
		:
	else
		if test "$remote_oid" = "$zero"
		then
			# New branch, examine all commits
			range="$local_oid"
		else
			# Update to existing branch, examine new commits
			range="$remote_oid..$local_oid"
		fi

		# Check for WIP commit
		commit=$(git rev-list -n 1 --grep '^WIP' "$range")
		if test -n "$commit"
		then
			echo >&2 "Found WIP commit in $local_ref, not pushing"
			exit 1
		fi

		# Check for format violations
		echo "執行 Unity 專案的程式碼格式檢查（使用 .editorconfig 規則）..."

		# 尋找 .sln 檔案並轉成絕對路徑
		sln_path=$(find . -type f -name "*.sln" | head -n 1)
		if [ -z "$sln_path" ]; then
			echo "找不到 .sln 檔案，無法執行格式檢查"
			exit 1
		fi

		# 取得 .sln 所在目錄並切換過去
		sln_dir=$(cd "$(dirname "$sln_path")" && pwd)
		cd "$sln_dir" || {
			echo "無法切換到 .sln 所在目錄：$sln_dir"
			exit 1
		}

		# 絕對路徑的 .sln 檔案
		sln_path="$sln_dir/$(basename "$sln_path")"
		echo "找到 .sln 檔案：$sln_path"

		# 檢查 dotnet CLI 是否可用
		if ! command -v dotnet &> /dev/null; then
			echo "dotnet CLI 未安裝，請先安裝 .NET SDK"
			exit 1
		fi

		# 檢查是否已安裝 dotnet-format（local tool）
		if ! dotnet tool list | grep -q dotnet-format; then
			echo "尚未安裝 dotnet-format，請執行：dotnet tool install dotnet-format"
			exit 1
		fi

		# 執行格式檢查（使用 .sln + .editorconfig）
		dotnet tool run dotnet-format "$sln_path" --check --fix-style warn
		FORMAT_RESULT=$?

		if [ $FORMAT_RESULT -ne 0 ]; then
			echo "程式碼格式錯誤，請依據 .editorconfig 修正後再 push"
			exit 1
		fi

		echo "格式檢查通過，繼續 push"
	fi
done

exit 0